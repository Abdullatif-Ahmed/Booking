{"version":3,"file":"static/js/353.5d6e44f9.chunk.js","mappings":"kPA8GA,UAlGe,WACb,IAAQA,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAArBF,MACR,GAA0CG,EAAAA,EAAAA,WAAS,GAAM,eAAlDC,EAAa,KAAEC,EAAgB,KACtC,GAA4BF,EAAAA,EAAAA,UAAS,IAAG,eAAjCG,EAAM,KAAEC,EAAS,KAClBC,GAAWC,EAAAA,EAAAA,UACXC,GAAUD,EAAAA,EAAAA,UAEVE,GAAWC,EAAAA,EAAAA,MAEU,aAU1B,OAV0B,0BAA3B,WAA4BC,GAAC,sEAEJ,OADvBA,EAAEC,iBACFT,GAAiB,GAAM,kBAEfL,EAAMQ,EAASO,QAAQC,MAAON,EAAQK,QAAQC,OAAO,KAAD,EAC1DL,EAAS,IAAK,CAAEM,SAAS,IAAQ,gDAEjCV,EAAU,KAAMW,SAChBb,GAAiB,GAAO,0DAE3B,sBACD,OAZAc,SAASC,MAAQ,WAaf,iBAAMC,MAAO,CAAEC,gBAAiB,UAAWC,QAAS,WAAY,UAC9D,SAAC,IAAS,WACR,0BACE,UAAC,IAAI,CACHC,SAjBiB,SACC,GAAD,gCAiBjBH,MAAO,CACLC,gBAAiB,OACjBG,SAAU,QACVC,UAAW,0CAEbC,UAAU,4BAA2B,WAErC,UAAC,IAAK,CACJC,QAAQ,SACRD,UAAS,oBACPrB,EAAS,aAAe,mBACvB,WAEH,SAAC,MAAa,CAACqB,UAAU,OAAOE,KAAM,KACrCvB,MAGH,SAAC,UAAU,CAACqB,UAAU,OAAOG,UAAU,iBAAgB,UACrD,SAAC,IAAa,CACZA,UAAU,gBACVC,MAAM,gBACNJ,UAAU,OAAM,UAEhB,SAAC,YAAY,CACXK,KAAK,QACLC,YAAY,mBACZC,IAAK1B,EACL2B,UAAQ,EACRC,WAAS,SAKf,SAAC,UAAU,CAACT,UAAU,OAAOG,UAAU,oBAAmB,UACxD,SAAC,IAAa,CAACA,UAAU,mBAAmBC,MAAM,WAAU,UAC1D,SAAC,YAAY,CACXC,KAAK,WACLC,YAAY,WACZC,IAAKxB,EACLyB,UAAQ,SAKd,mBACER,UAAU,2BACVK,KAAK,SACLK,SAAUjC,EAAc,SAEvBA,GACC,SAAC,IAAO,CAACkC,UAAU,SAASC,KAAK,SAASV,KAAK,KAAI,UACjD,iBAAMF,UAAU,kBAAiB,0BAGnC,aAGJ,sDAC2B,KACzB,mBACEA,UAAU,eACVa,QAAS,kBAAM7B,EAAS,UAAU,EAAC,gCAUnD,C,2JCzGM8B,EAAuBC,EAAAA,YAAiB,WAS3CR,GAAQ,IARTS,EAAQ,EAARA,SACAf,EAAO,EAAPA,QAAO,IACPU,UAAAA,OAAS,IAAG,WAAQ,EACpBT,EAAI,EAAJA,KAAI,IAEJe,GAAIC,OAAS,IAAG,QAAK,EACrBlB,EAAS,EAATA,UACGmB,GAAK,YAERH,GAAWI,EAAAA,EAAAA,IAAmBJ,EAAU,WACxC,IAAMK,EAAkB,GAAH,OAAML,EAAQ,YAAIL,GACvC,OAAoBW,EAAAA,EAAAA,KAAKJ,GAAW,gBAClCX,IAAKA,GACFY,GAAK,IACRnB,UAAWuB,IAAWvB,EAAWqB,EAAiBnB,GAAQ,GAAJ,OAAOmB,EAAe,YAAInB,GAAQD,GAAW,QAAJ,OAAYA,MAE/G,IACAa,EAAQU,YAAc,UACtB,K","sources":["Pages/SignIn.jsx","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["import { useContext, useRef, useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Container,\r\n  FloatingLabel,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { BiErrorCircle } from \"react-icons/bi\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { AuthContext } from \"../firebaseContext\";\r\n\r\nconst SignIn = () => {\r\n  const { logIn } = useContext(AuthContext);\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  const [errorM, setErrorM] = useState(\"\");\r\n  const emailInp = useRef();\r\n  const passInp = useRef();\r\n\r\n  const navigate = useNavigate();\r\n  document.title = \"sign in\";\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setSubmitLoading(true);\r\n    try {\r\n      await logIn(emailInp.current.value, passInp.current.value);\r\n      navigate(\"/\", { replace: true });\r\n    } catch (error) {\r\n      setErrorM(error.message);\r\n      setSubmitLoading(false);\r\n    }\r\n  }\r\n  return (\r\n    <main style={{ backgroundColor: \"#fafafa\", padding: \"100px 0\" }}>\r\n      <Container>\r\n        <div>\r\n          <Form\r\n            onSubmit={handleSubmit}\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              maxWidth: \"415px\",\r\n              boxShadow: \" rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n            }}\r\n            className=\"px-3 py-4 rounded mx-auto\"\r\n          >\r\n            <Alert\r\n              variant=\"danger\"\r\n              className={`rounded-0 ${\r\n                errorM ? \"error-show\" : \"error-disappear\"\r\n              }`}\r\n            >\r\n              <BiErrorCircle className=\"me-2\" size={30} />\r\n              {errorM}\r\n            </Alert>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <FloatingLabel\r\n                controlId=\"floatingInput\"\r\n                label=\"Email address\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"name@example.com\"\r\n                  ref={emailInp}\r\n                  required\r\n                  autoFocus\r\n                />\r\n              </FloatingLabel>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <FloatingLabel controlId=\"floatingPassword\" label=\"Password\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  ref={passInp}\r\n                  required\r\n                />\r\n              </FloatingLabel>\r\n            </Form.Group>\r\n\r\n            <button\r\n              className=\"btn2  w-100 mb-2 rounded\"\r\n              type=\"submit\"\r\n              disabled={submitLoading}\r\n            >\r\n              {submitLoading ? (\r\n                <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n              ) : (\r\n                \"Sign in\"\r\n              )}\r\n            </button>\r\n            <div>\r\n              you don't have an acount{\" \"}\r\n              <button\r\n                className=\"btn1 rounded\"\r\n                onClick={() => navigate(\"/signup\")}\r\n              >\r\n                Sign up\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\nexport default SignIn;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["logIn","useContext","AuthContext","useState","submitLoading","setSubmitLoading","errorM","setErrorM","emailInp","useRef","passInp","navigate","useNavigate","e","preventDefault","current","value","replace","message","document","title","style","backgroundColor","padding","onSubmit","maxWidth","boxShadow","className","variant","size","controlId","label","type","placeholder","ref","required","autoFocus","disabled","animation","role","onClick","Spinner","React","bsPrefix","as","Component","props","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName"],"sourceRoot":""}