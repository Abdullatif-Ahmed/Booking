{"version":3,"file":"static/js/392.e03781a5.chunk.js","mappings":"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","sources":["Pages/SignUp.jsx","../node_modules/react-bootstrap/esm/Spinner.js"],"sourcesContent":["import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Alert,\r\n  Container,\r\n  FloatingLabel,\r\n  Form,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\nimport { BiErrorCircle } from \"react-icons/bi\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { AuthContext } from \"../firebaseContext\";\r\nimport { db } from \"../firebase\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nconst email_regx = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\nconst pass_regx = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&#]).{7,20}$/;\r\n\r\nconst SignUp = () => {\r\n  const navigate = useNavigate();\r\n  const { signUp } = useContext(AuthContext);\r\n  const [emailVal, setEmailVal] = useState(\"\");\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [focusEmail, setFocusEmail] = useState(false);\r\n  const [passVal, setPassVal] = useState(\"\");\r\n  const [validPass, setValidPass] = useState(false);\r\n  const [focusPass, setFocusPass] = useState(false);\r\n  const [rPassVal, setRpassVal] = useState(\"\");\r\n  const [validRpass, setValidRpass] = useState(false);\r\n  const [errorM, setErrorM] = useState(\"\");\r\n  const errorRef = useRef();\r\n  const [submitLoading, setSubmitLoading] = useState(false);\r\n  document.title = \"sign up\";\r\n  useEffect(() => {\r\n    setValidEmail(email_regx.test(emailVal));\r\n  }, [emailVal]);\r\n  useEffect(() => {\r\n    setValidPass(pass_regx.test(passVal));\r\n    setValidRpass(passVal === rPassVal);\r\n  }, [passVal, rPassVal]);\r\n  useEffect(() => {\r\n    setErrorM(\"\");\r\n  }, [emailVal, passVal, rPassVal]);\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (email_regx.test(emailVal) && pass_regx.test(passVal)) {\r\n      setSubmitLoading(true);\r\n      try {\r\n        const newUser = await signUp(emailVal, passVal);\r\n        setDoc(doc(db, \"users\", newUser?.user.uid), {\r\n          savedHotels: [],\r\n        });\r\n        setEmailVal(\"\");\r\n        setPassVal(\"\");\r\n        setRpassVal(\"\");\r\n        navigate(\"/\", { replace: true });\r\n      } catch (error) {\r\n        if (error.message) {\r\n          setErrorM(error.message);\r\n        } else {\r\n          setErrorM(\"Registration Failed\");\r\n        }\r\n        errorRef.current.focus();\r\n        setSubmitLoading(false);\r\n      }\r\n    } else {\r\n      setErrorM(\"invalid Entry\");\r\n    }\r\n  }\r\n  return (\r\n    <main style={{ backgroundColor: \"#fafafa\", padding: \"100px 0\" }}>\r\n      <Container>\r\n        <div>\r\n          <Form\r\n            onSubmit={handleSubmit}\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              maxWidth: \"415px\",\r\n              boxShadow: \" rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n            }}\r\n            className=\"px-3 py-4 rounded mx-auto\"\r\n          >\r\n            <Alert\r\n              ref={errorRef}\r\n              variant=\"danger\"\r\n              className={`rounded-0 ${\r\n                errorM ? \"error-show\" : \"error-disappear\"\r\n              }`}\r\n              aria-live=\"assertive\"\r\n            >\r\n              <BiErrorCircle className=\"me-2\" size={30} />\r\n              {errorM}\r\n            </Alert>\r\n\r\n            <Form.Group controlId=\"formBasicEmail\" className=\"mb-3\">\r\n              <FloatingLabel controlId=\"floatingInput\" label=\"Email address\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  aria-invalid={!validEmail}\r\n                  aria-describedby=\"emailError\"\r\n                  placeholder=\"name@example.com\"\r\n                  autoComplete=\"off\"\r\n                  required\r\n                  value={emailVal}\r\n                  onChange={(e) => setEmailVal(e.target.value)}\r\n                  onFocus={() => setFocusEmail(true)}\r\n                  onBlur={() => setFocusEmail(false)}\r\n                />\r\n              </FloatingLabel>\r\n              <div\r\n                className={` ${\r\n                  emailVal && focusEmail && !validEmail\r\n                    ? \"error-show\"\r\n                    : \"error-disappear\"\r\n                }`}\r\n              >\r\n                <Form.Text id=\"emailError\">Must be a valid email</Form.Text>\r\n              </div>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\" className=\"mb-3\">\r\n              <FloatingLabel controlId=\"floatingPassword\" label=\"Password\">\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  aria-invalid={!validPass}\r\n                  aria-describedby=\"passError\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  value={passVal}\r\n                  onChange={(e) => setPassVal(e.target.value)}\r\n                  onFocus={() => setFocusPass(true)}\r\n                  onBlur={() => setFocusPass(false)}\r\n                />\r\n              </FloatingLabel>\r\n              <div\r\n                className={`${\r\n                  passVal && focusPass && !validPass\r\n                    ? \"error-show\"\r\n                    : \"error-disappear\"\r\n                }`}\r\n              >\r\n                <Form.Text id=\"passError\">\r\n                  7 to 20 characters. <br />\r\n                  must include uppercase and lowercase letters, a number and\r\n                  aspecial character. <br />\r\n                  Allowed special characters:{\" \"}\r\n                  <span aria-label=\"at sign\">@</span>{\" \"}\r\n                  <span aria-label=\"dollar sign\">$</span>\r\n                  <span aria-label=\"exclamation mark\">!</span>{\" \"}\r\n                  <span aria-label=\"Percent sign\">%</span>{\" \"}\r\n                  <span aria-label=\"question mark\">?</span>\r\n                  <span aria-label=\"ampersand mark\">&</span>\r\n                  <span aria-label=\"hashtag\">#</span>\r\n                </Form.Text>\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\" className=\"mb-3\">\r\n              <FloatingLabel\r\n                controlId=\"floatingPassword2\"\r\n                label=\"repeat your password\"\r\n              >\r\n                <Form.Control\r\n                  aria-invalid={!validRpass}\r\n                  aria-describedby=\"rPassError\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  value={rPassVal}\r\n                  onChange={(e) => setRpassVal(e.target.value)}\r\n                />\r\n              </FloatingLabel>\r\n              <div\r\n                className={`${\r\n                  rPassVal && !validRpass ? \"error-show\" : \"error-disappear\"\r\n                }`}\r\n              >\r\n                <Form.Text id=\"rPassError\">\r\n                  must match the first password input field\r\n                </Form.Text>\r\n              </div>\r\n            </Form.Group>\r\n            <button\r\n              className=\"btn2 rounded w-100 mb-2\"\r\n              type=\"submit\"\r\n              disabled={\r\n                !validEmail || !validPass || !validRpass || submitLoading\r\n                  ? true\r\n                  : false\r\n              }\r\n            >\r\n              {submitLoading ? (\r\n                <Spinner animation=\"border\" role=\"status\" size=\"sm\">\r\n                  <span className=\"visually-hidden\">Loading...</span>\r\n                </Spinner>\r\n              ) : (\r\n                \"Sign up\"\r\n              )}\r\n            </button>\r\n          </Form>\r\n        </div>\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\nexport default SignUp;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;"],"names":["email_regx","pass_regx","navigate","useNavigate","signUp","useContext","AuthContext","useState","emailVal","setEmailVal","validEmail","setValidEmail","focusEmail","setFocusEmail","passVal","setPassVal","validPass","setValidPass","focusPass","setFocusPass","rPassVal","setRpassVal","validRpass","setValidRpass","errorM","setErrorM","errorRef","useRef","submitLoading","setSubmitLoading","e","preventDefault","test","newUser","setDoc","doc","db","user","uid","savedHotels","replace","message","current","focus","document","title","useEffect","style","backgroundColor","padding","onSubmit","maxWidth","boxShadow","className","ref","variant","size","controlId","label","type","placeholder","autoComplete","required","value","onChange","target","onFocus","onBlur","id","disabled","animation","role","Spinner","React","bsPrefix","as","Component","props","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","displayName"],"sourceRoot":""}